@model IEnumerable<ServiceCRM.Models.ActivityViewModel>

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>List Activities</h2>
<hr />
<div class="row">
    <div class="col-md-12">
         
         @if (ViewBag.CustomerCount > 0)
         {
             <p class="pull-right"><a href='@Url.Action("Create", "Activity")' class="btn btn-primary">Create Activity</a></p>
         } else
         {

          <h3 class="text-center">Please create a customer before trying to create a activity.</h3>
         }
        
    </div>
</div>
<div class="row">
    <table id="activities" class="table table-bordered table-hover">
        <thead>
            <tr class="bg-info">
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.CustomerName)
                </th>
                <th class="text-center">
                   Full Name
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ActivityType)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.DueDate)
                </th>
                 
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.CompletedOn)
                </th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.ActivityType)
                    </td>
                    <td class="text-center">
                       
                        @if (item.DueDate.HasValue && item.DueDate >= DateTime.Now)
                        {
                            <span class="label label-success">
                        @item.DueDate.Value.ToShortDateString()
                        </span> ;
                        }
                        else
                        {
                            <span class="label label-danger">
                                @item.DueDate.Value.ToShortDateString()
                            </span> ;
                        }
                    </td>
                    
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="text-center">
                        @if (item.CompletedOn.HasValue)
                        {<span class="label label-success">
                            @item.CompletedOn.Value.ToShortDateString()
                        </span> ;
                        }
                        else
                        {
                            <span class="label label-warning">Pending Completion</span>
                            }
</td>
                    
                    <td class="text-center">
                         @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "glyphicon glyphicon-edit", data_toggle = "tooltip", data_placement = "top", title = "Edit Activity" }) |
                        <a class="glyphicon glyphicon-trash js-delete" data-activity-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Delete Activity"></a>
 
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts
{
 <script type="text/javascript">
            $(document).ready(function () {
                $('[data-toggle="tooltip"]').tooltip();
                $("#activities").DataTable();
                $("#activities").on("click", ".js-delete", function () {
                    var button = $(this);
                    swal({
                        title: "Are you sure?",
                        text: "You will not be able to recover this activity record!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, delete it!",
                        closeOnConfirm: false
                    }, function () {

                        $.ajax({
                            url: "/api/activities/" + button.attr("data-activity-id"),
                            method: "DELETE",
                            success: function () {
                                swal("Deleted!", "Your activity has been deleted.", "success");
                                location.reload();
                            },
                            error: function () {
                                swal("Not Deleted!", "Your activity could not be deleted.", "error");
                            }

                        })

                    });
                })
            });
</script>
}